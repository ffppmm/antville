var deny = this.isNotPublic(session.user,req.data.memberlevel);
if (deny) {
   res.message = getMessage("error",deny);
   session.data.referrer = this.href();
   res.redirect(this.members.href("login"));
}

res.data.action = this.href(req.action);

res.data.title = "Search " + this.title;

res.data.body = this.renderSkinAsString("searchform");

if (req.data.q) {
   var query = stripTags(req.data.q);
   // array with sites to search
   var sites = new Array (this);
   var result = root.searchSites (query, this._id);
   var found = result.length;
   if (found == 0)
      res.data.body += "<i>" + getMessage("error","searchNothingFound",query) + "</i>";
   else {
      var start = 0;
      var end = found;

      if (found == 1)
         res.data.body += getMessage("confirm","resultOne",query);
      else if (found <= 10)
         res.data.body += getMessage("confirm","resultMany",new Array(encodeForm(query),found));
      else {
         if (req.data.start)
            start = Math.min (found-1, parseInt (req.data.start));
         if (isNaN (start))
            start = 0;
         end = Math.min (found, start+10);
         res.data.body += getMessage("confirm","resultMany",new Array(encodeForm(query),found));
         res.data.body += " " + getMessage("confirm","resultDisplay",new Array(start+1,end));
      }

      res.data.body += "<br />";
      
      // note: I'm doing this without a "searchbody" skin, since
      // I think there's not much need to customize the body of
      // search results, esp. since its parts are fully customizable.
      // of course, I may be wrong about that.
      
      // render prev links, if necessary
      if (start > 0) {
         var sp = new Object();
         sp.url = this.href() + "search?q="+escape(query)+"&start="+Math.max(0,start-10);
         sp.text = "previous results";
         res.data.body += "<br /><br />"+renderSkinAsString("prevpagelink",sp);
      }
      
      // render result
      for (var i=start; i<end; i++) {
         var site = root.get(result[i].sitealias);
         var item = site.allcontent.get(result[i].sid);
         if (item)
            res.data.body += item.renderSkinAsString("searchview");
      }

      // render next links, if necessary
      if (end < found) {
         var sp = new Object();
         sp.url = this.href() + "search?q="+escape(query)+"&start="+Math.min(found-1,start+10);
         sp.text = "next results";
         res.data.body += renderSkinAsString("nextpagelink",sp);
      }
   }
}

this.renderSkin("page");
