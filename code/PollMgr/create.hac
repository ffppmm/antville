var deny = this.isDenied(session.user);
if (deny) {
   res.message = deny;
   res.redirect(session.data.referrer ? path.weblog.members.href("login") : this.href());
}

// storing referrer in session in case user clicks cancel later
if (!session.data.referrer && req.data.http_referer)
   session.data.referrer = req.data.http_referer;

if (req.data.submit == "cancel" || req.data.cancel) {
   var url = session.data.referrer ? session.data.referrer : this.href();
   session.data.referrer = null;
   res.redirect(url);
} else if (req.data.submit == "save" || req.data.save) {
   var result = this.evalNewPoll(req.data,session.user);
   res.message = result.message;
   session.data.referrer = null;
   if (!result.error)
      res.redirect(result.url);
}

var len = 0
if (!req.data.choice_array) {
	var max = 2;
	req.data.choice_array = new Array(max);
	if (req.data.choice)
		req.data.choice_array[0] = req.data.choice;
}
else {
	var len = req.data.choice_array.length;
	var max = len;
}

if (req.data.submit == "add choice")
	max++;

var newPoll = new poll();
var c = new choice();
res.data.choices = "";
for (var i=0; i<max; i++) {
	var param = new Object();
	param.value = (i < len) ? req.data.choice_array[i] : "";
	param.count = i+1;
 	res.data.choices += c.renderSkinAsString("edit", param);
}

res.data.action = this.href(req.action);

res.data.command = "Create";
res.data.title = path.weblog.title;

res.data.body = newPoll.renderSkinAsString("edit");

path.weblog.renderSkin("page");