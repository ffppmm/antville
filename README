======
STATUS
======

Antville can be considered stable quality code. It is heavily used by several 
thousands of users at http://antville.org and several other sites (see 
http://code.google.com/p/antville/wiki/AntvilleSites). Nevertheless, there 
still could be bugs hidden somewhere in this application. 

If you think you found a bug please report it at http://project.antville.org.

Antville can be used for production purposes, but please bear in mind that the
creators of Antville do not take any warranty, whichever kind.

===================
SYSTEM REQUIREMENTS
===================

To run Antville you need Helma Object Publisher (http://helma.org) and a
relational database in the backend. Antville was tested with PostgreSQL 
(http://postgresql.org) and MySQL (http://mysql.com).

For setting up Helma Object Publisher and the database of your choice please
refer to the corresponding installation instructions.

To enable Antville sending confirmation mails to users (e.g. after
registration) you will also need access to an SMTP server.

Helma comes with its own embedded webserver (Jetty) so you do not need to
install one, although you can easily use Apache httpd as front-end webserver,
too.

Please refer to the INSTALL file for detailed information on how to install
Antville.

=====================================
DOCUMENTATION AND FURTHER INFORMATION
=====================================

For documentation and further information regarding Antville please refer to:

 * http://project.antville.org
 * http://about.antville.org
 * http://help.antville.org

Feel free to ask any question regarding the application at
http://help.antville.org

You should follow Antville on Facebook and Twitter:

 * http://facebook.com/Antville
 * http://twitter.com/antville_org

For further information about Helma, http://helma.org generally is a good
place. There is also a mailing list about Helma-related stuff available at
http://groups.google.com/group/helma.

==================================
BUG REPORTING AND FEATURE REQUESTS
==================================

If you found a bug please report it at http://project.antville.org.

Please post feature requests or proposals to http://project.antville.org.

Since Antville is open-source, you are definitely encouraged to modify the
application, but please keep us informed on what you do/did – either by
posting at http://help.antville.org or by sending a message to
mail@antville.org.

For those of you who demonstrated a commitment to collaborative open-source
development through sustained participation and contributions within the
development of Antville, there will also be other ways to participate.

==============
ABOUT ANTVILLE
==============

Antville is an open source project aimed at the development of a high 
performance, feature rich weblog hosting software. It can easily host 
up to several thousands of sites (the number of weblogs is rather
limited by the installation owner’s choice and server power than by software 
limitations).

Antville is entirely written in JavaScript (ECMAScript, to be precise)
and based on Helma Object Publisher, a powerful and fast scriptable
open source web application server (which itself is written in Java).
Antville works with a relational database in the backend.

Check out http://project.antville.org for more information.

============================
ABOUT HELMA OBJECT PUBLISHER
============================

Helma Object Publisher is a web application server.

With Helma Object Publisher (sometimes simply referred to as Helma or 
Hop) you can define Objects and map them to a relational database 
table. These so-called HopObjects can be created, modified and deleted 
using a comfortable object/container model. Hence, no manual fiddling 
around with database code is necessary.

HopObjects are extended JavaScript objects which can be scripted using 
server-side JavaScript. Beyond the common JavaScript features, Helma 
provides special “skin” and template functionalities which facilitate 
the rendering of objects via a web interface.

Thanks to Helma’s relational database mapping technology, HopObjects 
create a hierarchical structure, the URL space of a Helma site. The 
parts between slashes in a Helma URL represent HopObjects (similar to 
the document tree in static sites). The Helma URL space can be thought 
of as an analogy to the Document Object Model (DOM) in client-side 
JavaScript.

Check out http://helma.org for more information.
